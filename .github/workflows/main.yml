name: Test project

on: [push, pull_request]

jobs:
  checkLicense:
    name: Check for the Unity license ☑️
    runs-on: ubuntu-latest
    steps:
      - name: Fail - No license ☠️
        env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
        run: exit 1

  testAllModes:
    needs: checkLicense
    name: Test in ${{ matrix.testMode }}
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v3
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ matrix.testMode }}
          restore-keys: |
            ${{ runner.os }}-lfs-${{ matrix.testMode }}-
            ${{ runner.os }}-lfs-

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.testMode }}
          restore-keys: |
            Library-${{ matrix.testMode }}-
            Library-

      - name: Run Test
        uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: 2022.2.2f1
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}